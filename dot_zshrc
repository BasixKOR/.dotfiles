[[ -v ZPROF ]] && zmodload zsh/zprof;

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

if [[ -d "~/.zinit/zmodules/Src" ]]; then
  module_path+=( "$HOME/.zinit/zmodules/Src" )
  zmodload zdharma/zplugin
fi

# PATH Configure
export PATH="$HOME/.local/bin:$HOME/bin:$PATH"

# mise
# place this closer to the top for tool detections
if (( $+commands[mise] )); then
  if [[ -v MISE_SHIM ]]; then
    eval "$(mise activate zsh --shims)"
  else
    eval "$(mise activate zsh)"
  fi
fi

# MacOS XDG_CONFIG_HOME override
if [[ $(uname) == "Darwin" ]]; then
  export XDG_CONFIG_HOME="$HOME/.config"
fi

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt autocd extendedglob nomatch notify appendhistory
bindkey -v
# End of lines configured by zsh-newuser-install

source ~/.zinit/zinit.zsh

# Brew Shellenv
if [[ -d /opt/homebrew ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
  fpath+="/opt/homebrew/share/zsh/site-functions"
fi

# The following lines were added by compinstall
zstyle :compinstall filename '~/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# Zinit plugins
zinit ice depth=1; zinit light romkatv/powerlevel10k
zinit light zdharma-continuum/fast-syntax-highlighting
if (( $+commands[atuin] )); then
  zinit light atuinsh/atuin
else
  (( $+commands[fzf] )) && zinit ice lucid wait; zinit light joshskidmore/zsh-fzf-history-search
  zinit ice depth=1 wait lucid; zinit light zsh-users/zsh-history-substring-search
  bindkey '^[[A' history-substring-search-up
  bindkey '^[[B' history-substring-search-down
fi
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit ice lucid wait; zinit light simnalamburt/cgitc
zinit ice lucid pick"z.sh"; zinit light rupa/z
if (( $+commands[fzf] )); then
  zinit ice lucid wait pick"fz.sh"; zinit light changyuheng/fz
  [ -s ~/.fig/fig.sh ] || zinit ice lucid wait; zinit light Aloxaf/fzf-tab
fi

# history-substring-search
bindkey '^H' backward-kill-word
setopt complete_in_word
setopt always_to_end
WORDCHARS=''
zmodload -i zsh/complist

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Zsh Fast Syntax Highlighting
fast-theme XDG:catppuccin-macchiato > /dev/null

# Fix keybindings
bindkey  "^[[H"    beginning-of-line # Home
bindkey  "^[[F"    end-of-line       # End
bindkey  "^[[3~"   delete-char       # Delete
bindkey  "^[[1;5C" forward-word      # Ctrl + ->
bindkey  "^[[1;5D" backward-word     # Ctrl + <-

# Set EDITOR
if [[ "$TERM_PROGRAM" = "vscode" ]]; then
  export EDITOR="code --wait"
elif [[ -n "$ZED" ]]; then
  export EDITOR="zed -w"
elif (( $+commands[nvim] )); then
  export EDITOR=nvim
  alias lvim="NVIM_APPNAME=lazyvim nvim"
elif (( $+commands[vim] )); then
  export EDITOR=vim
fi

# Supercharged default commands.
if (( $+commands[lsd] )); then
  alias l='lsd -Al --date=relative --group-dirs=first --blocks=permission,user,size,date,name'
  alias ll='lsd -l --date=relative --group-dirs=first --blocks=permission,user,size,date,name'
  alias lt='lsd --tree --depth=2 --date=relative --group-dirs=first'
else
  alias l='ls -alh'
  alias ll='ls -lh'
fi
alias mv='mv -i'
alias cp='cp -i'
alias y='yarn'
alias p='pnpm'
alias m='mise'
alias pick='pushd $(fd -td | fzf)'

# Chezmoi completions
if (( $+commands[chezmoi] )); then
  source <(chezmoi completion zsh)
fi

# direnv integration
if (( $+commands[direnv] )); then
  eval "$(direnv hook zsh)"
fi

# sccache integration
if (( $+commands[sccache] )); then
  export RUSTC_WRAPPER="$(which sccache)"
fi

# fzf integration
if (( $+commands[fzf] )); then
  # https://github.com/catppuccin/fzf?tab=readme-ov-file#usage
  export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"
fi

if (( $+commands[lazygit] )); then
  alias lg=lazygit
fi

if (( $+commands[git-branchless] )); then
  alias grd='git record'
  alias gsl='git smartlog'
  alias grw='git reword'
  alias gam='git amend'
  alias g+='git next -i'
  alias g-='git prev -i'
  alias gmv='git move'
  alias gsy='git sync'
  alias gsyp='git sync --pull'
  alias gswi="git sw -i"
  alias gu='git undo'
  alias gq='git query'
  alias gsm='git submit'
  alias gsmd="git submit 'draft()'"
fi

# krew
if (( $+commands[kubectl-krew] )); then
  export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
fi

# just
if (( $+commands[just] )); then
  alias j="just"
  alias jg="just -g"
fi

# Bun completions
[ -s "~/.bun/_bun" ] && source "~/.bun/_bun"

# Bun
export BUN_INSTALL="~/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

if [[ -f "$HOME/.cargo/env" ]]; then
  source "$HOME/.cargo/env"
fi

if [[ -d '/opt/homebrew/opt/rustup/bin' ]]; then
  export PATH="/opt/homebrew/opt/rustup/bin:$PATH"
fi

if [[ -d "$HOME/.dotnet/tools" ]]; then
  export PATH="$HOME/.dotnet/tools:$PATH"
fi

# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

[[ -v ZPROF ]] && zprof
# vim: ft=zsh
