[[ -v ZPROF ]] && zmodload zsh/zprof;

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Fig
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && . "$HOME/.fig/shell/zshrc.pre.zsh"

if [[ -d "~/.zinit/zmodules/Src" ]]; then
  module_path+=( "/c/Users/basix/.zinit/zmodules/Src" )
  zmodload zdharma/zplugin
fi

# PATH Configure
export PATH="$HOME/.local/bin:$HOME/bin:$PATH"

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt autocd extendedglob nomatch notify appendhistory
bindkey -v
# End of lines configured by zsh-newuser-install

source ~/.zinit/zinit.zsh

# The following lines were added by compinstall
zstyle :compinstall filename '~/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# Zinit plugins
zinit ice depth=1; zinit light romkatv/powerlevel10k
zinit light zdharma-continuum/fast-syntax-highlighting
zinit ice depth=1 wait lucid; zinit light zsh-users/zsh-history-substring-search
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit ice lucid wait; zinit light simnalamburt/cgitc
zinit ice lucid wait pick"z.sh"; zinit light rupa/z
if (( $+commands[fzf] )); then
  zinit ice lucid wait; zinit light joshskidmore/zsh-fzf-history-search
  zinit ice lucid wait pick"fz.sh"; zinit light changyuheng/fz
  [ -s ~/.fig/fig.sh ] || zinit ice lucid wait; zinit light Aloxaf/fzf-tab
fi

# history-substring-search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^H' backward-kill-word
setopt complete_in_word
setopt always_to_end
WORDCHARS=''
zmodload -i zsh/complist

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Fix keybindings
bindkey  "^[[H"    beginning-of-line # Home
bindkey  "^[[F"    end-of-line       # End
bindkey  "^[[3~"   delete-char       # Delete
bindkey  "^[[1;5C" forward-word      # Ctrl + ->
bindkey  "^[[1;5D" backward-word     # Ctrl + <-

# Set EDITOR
if [[ "$TERM_PROGRAM" = "vscode" ]]; then
  export EDITOR="code --wait"
elif (( $+commands[nvim] )); then
  export EDITOR=nvim
elif (( $+commands[vim] )); then
  export EDITOR=vim
fi

# Supercharged default commands.
if (( $+commands[lsd] )); then
  alias l='lsd -Al --date=relative --group-dirs=first --blocks=permission,user,size,date,name'
  alias ll='lsd -l --date=relative --group-dirs=first --blocks=permission,user,size,date,name'
  alias lt='lsd --tree --depth=2 --date=relative --group-dirs=first'
else
  alias l='ls -alh'
  alias ll='ls -lh'
fi
alias mv='mv -i'
alias cp='cp -i'
if (( $+commands[yarn] )); then
  alias y='yarn'
fi


# Chezmoi completions
if (( $+commands[chezmoi] )); then
  source <(chezmoi completion zsh)
fi

# direnv integration
if (( $+commands[direnv] )); then
  eval "$(direnv hook zsh)"
fi

# iTerm2 integrations
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Bun completions
[ -s "~/.bun/_bun" ] && source "~/.bun/_bun"

# Bun
export BUN_INSTALL="~/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# Volta
if [[ -d "$HOME/.volta" ]]; then
  export VOLTA_HOME="$HOME/.volta"
  export PATH="$VOLTA_HOME/bin:$PATH"
fi

if [[ -d "$HOME/.dotnet/tools" ]]; then
  export PATH="$HOME/.dotnet/tools:$PATH"
fi

# Brew Shellenv
if (( $+commands[brew] )); then
  eval "$(brew shellenv)"
fi

[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && . "$HOME/.fig/shell/zshrc.post.zsh"
[[ -v ZPROF ]] && zprof
